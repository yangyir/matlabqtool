function [ output_args ] = dh_plot_continous_IF_roll_cost( iNearby )
%DH_PLOT_CONTINOUS_IF_ROLL_COST 看历史上某连续合约的roll effect

%   Detailed explanation goes here

%% 预处理
if ~exist('iNearby', 'var'), iNearby  = 1; end
switch iNearby
    case{1}
        IFcode = 'IF0Y00';
    case{2}
        IFcode = 'IF0Y01';
    case{3}
        IFcode = 'IF0Y02';        
    case{4}
        IFcode = 'IF0Y03';
    otherwise
        disp('错误：iNearby应为1，2，3，4');
        return;       
end

%% 收盘价数据
tdayStr     = datestr(today,'yyyy-mm-dd');
datesStr    = DH_D_TR_MarketTradingday(3,'2010-04-16',tdayStr);

% 当日17点前，还没有当日的数据，会出错
if hour(now) < 17
    datesStr    = datesStr(1:end-1,:);
end
ifDates         = datenum(datesStr);

% Close数据
ifClose         = nan(size(datesStr,1), 4);
ifClose(:,1)    = DH_Q_DQ_Future('IF0Y00',datesStr,'Close');
ifClose(:,2)    = DH_Q_DQ_Future('IF0Y01',datesStr,'Close');
ifClose(:,3)    = DH_Q_DQ_Future('IF0Y02',datesStr,'Close');
ifClose(:,4)    = DH_Q_DQ_Future('IF0Y03',datesStr,'Close');


%% 找出settle dates对应的idxStl
code    = DH_E_FS_IF_ContiContr('IF0Y00',datesStr);
stlDate = datenum( DH_D_F_FLastDay(code) );
e       = stlDate == ifDates;
idxStl  = find(e==1);

% 若始终拿IF0Y02或IF0Y03,在1，4，7，10月换
if iNearby == 3 || iNearby ==4
    idxStl  = find(e==1 & mod(month(stlDate),3) == 1);
end


%% 移仓成本（以多仓计算）, 在到期日前后看4天

rollCost = nan(length(idxStl), 5);
switch(iNearby)
    % 始终拿IF0Y00，在交割日移仓，或提前
    case{1}        
        for adv = 0:4
            rollCost(:, adv+1) = ifClose(idxStl - adv,iNearby+1) - ifClose(idxStl - adv,iNearby);
        end       
    
    % 若始终拿IF0Y01, IF0Y02, IF0Y03，在交割日后第一日移仓，或延迟
    case{2,3,4}
        adv = 0;
        rollCost(:, adv+1) = ifClose(idxStl + adv,iNearby+1) - ifClose(idxStl + adv,iNearby);
        
        for adv = 1:4
            try % idxStl(end) + adv 可能会是未来时间
                rollCost(:, adv+1) = ifClose(idxStl + adv,iNearby) - ifClose(idxStl + adv,iNearby-1);
            catch e
                rollCost(1:end-1, adv+1) = ifClose(idxStl(1:end-1) + adv,iNearby) - ifClose(idxStl(1:end-1) + adv,iNearby-1);
            end
        end        
end

m = mean(rollCost(end-12:end,:));
s = std(rollCost(end-12:end,:),0, 1);


figure(617); hold off;
plot(rollCost)
legend('交割日', '+1', '+2', '+3','+4');
if iNearby == 1, legend('交割日', '-1', '-2', '-3','-4'); end 
title(sprintf('Roll Cost: %d Nearby', iNearby));        
grid on        


%% 计算total IF
adjCost         = zeros(size(ifClose,1),1);
adjCost(idxStl) = rollCost(:,2);
cumAdjCost      = cumsum(adjCost);
ttlIF          = ifClose(:,iNearby) - cumAdjCost;


figure(616); hold off
plot(ttlIF);
hold on
plot(ifClose(:,iNearby),'r');
legend('total IF', 'IF');
title(sprintf('tradable total IF: %d Nearby', iNearby));         
grid on        

end

